// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainPage renders MainPage without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MainPage
    isPending={false}
    onRequestRobocats={[Function]}
    onSearchChange={[Function]}
    robocats={Array []}
    searchField=""
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="MainPage-header"
>
          <h1
                    className="MainPage-title"
          >
                    Robocats
          </h1>
          <h2>
                    Here you can find a new cute pet!
          </h2>
          <SearchField
                    onSearch={[Function]}
          />
</header>,
        <ErrorBoundary>
          <Unknown
                    data={Array []}
          />
</ErrorBoundary>,
      ],
      "className": "MainPage MainPage-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1
              className="MainPage-title"
>
              Robocats
</h1>,
            <h2>
              Here you can find a new cute pet!
</h2>,
            <SearchField
              onSearch={[Function]}
/>,
          ],
          "className": "MainPage-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Robocats",
              "className": "MainPage-title",
            },
            "ref": null,
            "rendered": "Robocats",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Here you can find a new cute pet!",
            },
            "ref": null,
            "rendered": "Here you can find a new cute pet!",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "onSearch": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Unknown
            data={Array []}
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "data": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="MainPage-header"
>
            <h1
                        className="MainPage-title"
            >
                        Robocats
            </h1>
            <h2>
                        Here you can find a new cute pet!
            </h2>
            <SearchField
                        onSearch={[Function]}
            />
</header>,
          <ErrorBoundary>
            <Unknown
                        data={Array []}
            />
</ErrorBoundary>,
        ],
        "className": "MainPage MainPage-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="MainPage-title"
>
                Robocats
</h1>,
              <h2>
                Here you can find a new cute pet!
</h2>,
              <SearchField
                onSearch={[Function]}
/>,
            ],
            "className": "MainPage-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Robocats",
                "className": "MainPage-title",
              },
              "ref": null,
              "rendered": "Robocats",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Here you can find a new cute pet!",
              },
              "ref": null,
              "rendered": "Here you can find a new cute pet!",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "onSearch": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Unknown
              data={Array []}
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "data": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
